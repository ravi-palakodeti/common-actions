name: Pre-Merge Security Steps
description: Workflow to implement static code analysis

inputs:
  cf_folder_path:
    description: Path to cloudformation files
    required: true
  cf_file_path:
    description: order of cloudformation files to process
    required: true
  cf_rules_path:
    description: path to the ruleset file
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install OPA
      shell: bash
      run: |
        curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
        chmod +x ./opa
        ./opa version
    - name: cdk synth
      shell: bash
      run: |
        yarn
        yarn cdk synth -q -o .
        ls -l
    - name: evaluate opa
      shell: bash
      run: |
        sudo apt-get install jq
        if ![[ $(./opa eval --format pretty -i welcome-api.template.json -d policy.rego "data" | jq .policy.allow) = true ]]; then
          echo "False"
        else
          echo "True"
        fi
  
#   using: composite
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Cloudformation Deploy
#       shell: bash
#       run: |
#         echo cloudformation will be deployed here
#         - name: Generate CF File
#           working-directory: cdk
#           shell: bash
#           run: |
#            yarn
#            mkdir tmp
#            yarn cdk synth -q -o tmp
#     - name: cloudformation guard
#       shell: bash
#       run: |
#         cat ${{ inputs.cf_folder_path}}/${{ inputs.cf_file_path }}
#         curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/aws-cloudformation/cloudformation-guard/main/install-guard.sh | sh
#         PATH=$PATH:~/.guard/bin/
#         cfn-guard validate -r ${{ inputs.cf_folder_path}}/${{ inputs.cf_rules_path }} -d ${{ inputs.cf_folder_path}}/${{ inputs.cf_file_path }}
