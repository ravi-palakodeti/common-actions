name: Static-Analysis
description: Workflow to implement static code analysis

inputs:
  go_project_path:
    description: Path to go files for the repo
    required: false
  aws_role_arn:
    description: Role ARN to generate the token for
    required: true
  id_token_request:
    description: ID token to be used
    required: true
  id_token_request_url:
    description: URL to request token
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
        version: v1.29

        # Optional: working directory, useful for monorepos
        # working-directory: ${{inputs.go_project_path}}

        # Optional: golangci-lint command line arguments.
        # args: --issues-exit-code=0

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true then the action will use pre-installed Go.
        # skip-go-installation: true

        # Optional: if set to true then the action don't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
        # skip-build-cache: true

    # - name: Wait
    #   shell: bash
    #   run: sleep 5 # initialize env variables

    # - name: Configure AWS Credentials
    #   shell: bash
    #   env:
    #     AWS_ROLE_ARN: ${{ inputs.aws_role_arn }}
    #     AWS_WEB_IDENTITY_TOKEN_FILE: /tmp/awscreds
    #     AWS_DEFAULT_REGION: us-east-2
    #   run: |
    #     echo variables: ${{ inputs.id_token_request }}" "${{ inputs.id_token_request_url }}"
    #     echo AWS_WEB_IDENTITY_TOKEN_FILE=$AWS_WEB_IDENTITY_TOKEN_FILE >> $GITHUB_ENV
    #     echo AWS_ROLE_ARN=$AWS_ROLE_ARN >> $GITHUB_ENV
    #     echo AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION >> $GITHUB_ENV
    #     curl -H "Authorization: bearer ${{ inputs.id_token_request }}" "${{ inputs.id_token_request_url }}" | jq -r '.value' > $AWS_WEB_IDENTITY_TOKEN_FILE

    # - name: Publish golangci action version
    #   uses: ros-tooling/action-cloudwatch-metrics@0.0.5
